@using Microsoft.EntityFrameworkCore.Query.SqlExpressions
@inject FolderRepository _folderRepo
@inject NavigationManager nav

<div class="md:flex flex-col md:flex-row md:min-h-screen w-full shadow-2xl rounded" >
  <div class="flex flex-col w-full md:w-64 text-gray-700 bg-gray-200 dark-mode:text-gray-200 dark-mode:bg-gray-800 flex-shrink-0">
    <div class="flex-shrink-0 px-8 py-4 flex flex-row items-center justify-between">
      <img alt="Feedster logo" src="feedster-logo-full-transparent.png" @onclick="@(() => NavTo("/"))" class="cursor-pointer float-left"  Style="margin-left: -10px; max-width: 12em; vertical-align: middle;"/>
      <button class="rounded-lg md:hidden rounded-lg focus:outline-none focus:shadow-outline" @onclick="ToggleSidebar">
        <svg fill="currentColor" viewBox="0 0 20 20" class="w-6 h-6">
          @if (showSidebar)
          {
            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
          }
          else
          {
            <path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM9 15a1 1 0 011-1h6a1 1 0 110 2h-6a1 1 0 01-1-1z" clip-rule="evenodd"></path>
          }
        </svg>
      </button>
    </div>
    <nav class="flex-grow md:block px-4 pb-4 md:pb-0 md:overflow-y-auto @(showSidebar ? "" : "hidden")">
      <div @onclick="@(() => NavTo("feeds/manage"))" class="@GetActive("feeds/manage", NavLinkMatch.All) mt-2 mb-3 bg-inherit focus:ring-2 pl-2 py-2 focus:bg-gray-300 focus:ring-black focus:outline-none text-lg cursor-pointer select-none hover:bg-gray-300 active:bg-gray-400 rounded-lg">
        <svg style="display:inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75V6.75zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zM3.75 12h.007v.008H3.75V12zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm-.375 5.25h.007v.008H3.75v-.008zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z" />
        </svg>
        <a style="display:inline-block">Manage Feeds</a>
      </div>
      <div @onclick="@(() => NavTo("folders/manage"))" class="@GetActive("folders/manage", NavLinkMatch.All) mt-2 mb-4 bg-inherit focus:ring-2 pl-2 py-2 focus:bg-gray-300 focus:ring-black focus:outline-none text-lg cursor-pointer select-none hover:bg-gray-300 active:bg-gray-400 rounded-lg">
        <svg style="display:inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 00-1.883 2.542l.857 6a2.25 2.25 0 002.227 1.932H19.05a2.25 2.25 0 002.227-1.932l.857-6a2.25 2.25 0 00-1.883-2.542m-16.5 0V6A2.25 2.25 0 016 3.75h3.879a1.5 1.5 0 011.06.44l2.122 2.12a1.5 1.5 0 001.06.44H18A2.25 2.25 0 0120.25 9v.776" />
        </svg>
        <a style="display:inline-block">Manage Folders</a>
      </div>
      <p class="block px-2 mt-2 py-2 mt-2 text-lg font-bold text-gray-900 rounded-lg dark-mode:hover:bg-gray-600 dark-mode:focus:bg-gray-600 dark-mode:focus:text-white dark-mode:hover:text-white dark-mode:text-gray-200 hover:text-gray-900">Folders</p>

          @foreach (var folder in _folders)
          {
            <div x-cloak="x-cloak" x-on:click.away="open = false" class=" relative mb-2" x-data="{ open: false }">
              <div class="py-2 truncate z-30 hover:bg-gray-300 active:bg-gray-400 rounded-lg cursor-pointer @GetActive("folder/" + folder.FolderId, NavLinkMatch.All)" @onclick="@(() => NavTo("/folder/" + folder.FolderId))">
                <button x-on:click="open = !open" @onclick:stopPropagation="true" @onclick:preventDefault="true" style="display:inline-block;" class="ml-2 select-none justify-center items-center font-semibold bg-transparent rounded-lg dark-mode:bg-transparent dark-mode:focus:text-white dark-mode:hover:text-white dark-mode:focus:bg-gray-600 dark-mode:hover:bg-gray-600 md:block hover:text-gray-900 focus:text-gray-900 hover:bg-gray-200 focus:bg-gray-200 focus:outline-none focus:shadow-outline0 z-40">
                  <svg fill="currentColor" viewBox="0 0 20 20" :class="{'rotate-180': open, 'rotate-0': !open}" class="inline w-6 h-6 transition-transform duration-200 transform md:-mt-1"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                </button>
                <a class="bg-inherit pl-1 py-1 pr-1 text-lg cursor-pointer select-none">@folder.Name</a>
              </div>
              @if(folder.Feeds.Any()){
              <div x-show="open" x-transition:enter="transition ease-out duration-100" x-transition:enter-start="transform opacity-0 scale-95" x-transition:enter-end="transform opacity-100 scale-100" x-transition:leave="transition ease-in duration-75" x-transition:leave-start="transform opacity-100 scale-100" x-transition:leave-end="transform opacity-0 scale-95" class="absolute right-0 w-full mt-2 origin-top-right rounded-md shadow-lg z-50">
                <div class="px-2 py-2 bg-white rounded-md shadow dark-mode:bg-gray-800">
                  @foreach (var feed in folder.Feeds)
                  {
                    <a @onclick="@(() => NavTo("/feed/" + feed.FeedId))" class="dropdown-char-length cursor-pointer block px-4 py-2 mb-1 text-sm font-semibold bg-transparent rounded-lg dark-mode:bg-transparent dark-mode:hover:bg-gray-600 dark-mode:focus:bg-gray-600 dark-mode:focus:text-white dark-mode:hover:text-white dark-mode:text-gray-200 md:mt-0 hover:text-gray-900 focus:text-gray-900 hover:bg-gray-200 focus:bg-gray-200 focus:outline-none focus:shadow-outline" href="feed/@feed.FeedId">@feed.Name</a>
                  }
                </div>
              </div>
              }
            </div>
          }
          <!--a class="hover:-translate-y-1 p-2 hover:scale-101 transition align-middle bottom-0 mb-2 position-absolute block px-4 py-2 mt-2 text-sm font-semibold text-gray-900 rounded-lg dark-mode:hover:bg-gray-600 dark-mode:focus:bg-gray-600 dark-mode:focus:text-white dark-mode:hover:text-white dark-mode:text-gray-200 hover:text-gray-900 focus:text-gray-900 hover:bg-gray-200  focus:ring-2 focus:outline-none  focus:ring-gray-600 dark:focus:ring-gray-700 focus:bg-gray-200 focus:shadow-md" href="#">Settings</!--a-->
      </nav>
  </div>
</div>

@code{
  List<Folder> _folders;
  private static bool showSidebar = false;
  
  protected override async Task OnInitializedAsync()
  {
    //nav.LocationChanged += (s, e) => StateHasChanged();
    await DataLoad();
  }
  private async Task NavTo(string navlink)
  {
    nav.NavigateTo(navlink, forceLoad: true);
    await ToggleSidebar();
  }
  
  private async Task DataLoad()
  {
    _folders = await _folderRepo.GetAll();
  }

  private async Task ToggleSidebar()
  {
    showSidebar = !showSidebar;
  }
  
  // for marking active navbar tab
  bool IsActive(string href, NavLinkMatch navLinkMatch = NavLinkMatch.Prefix)
  {
    var relativePath = nav.ToBaseRelativePath(nav.Uri).ToLower();
    return navLinkMatch == NavLinkMatch.All ? relativePath == href.ToLower() : relativePath.StartsWith(href.ToLower());
  }
  
  string GetActive(string href, NavLinkMatch navLinkMatch = NavLinkMatch.Prefix) => IsActive(href, navLinkMatch) ? "ring-2 bg-gray-300 ring-black outline-none" : "";
}