@page "/folder/{folderId:int}"

@inject NavigationManager NavigationManager
@inject FolderRepository FolderRepo
@inject FeedRepository _feedRepo
@inject ArticleRepository _articleRepo
@inject IJSRuntime js

<PageTitle>Feedster - @_folder.Name</PageTitle>
<h5 class="mb-2 font-bold tracking-tight dark:text-white" style="font-size: 3.5em">@_folderDisplayName</h5>


<!-- MANAGE / RENAME / DELETE BUTTON GROUP -->
<div class="inline-flex rounded-md shadow-sm mb-4" role="folder">
    <button @onclick="LoadFeeds" type="button" class="inline-flex items-center py-2 px-4 text-sm font-medium text-gray-900 bg-transparent rounded-l-lg border border-gray-900 hover:bg-gray-900 hover:text-white focus:z-10 focus:ring-2 focus:ring-gray-500 focus:bg-gray-900 focus:text-white dark:border-white dark:text-white dark:hover:text-white dark:hover:bg-gray-700 dark:focus:bg-gray-700">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12.75 19.5v-.75a7.5 7.5 0 00-7.5-7.5H4.5m0-6.75h.75c7.87 0 14.25 6.38 14.25 14.25v.75M6 18.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0z" />
        </svg>
        Manage Feeds
    </button>
    <button type="button" onclick="toggleSlideover()" class="inline-flex items-center py-2 px-4 text-sm font-medium text-gray-900 bg-transparent border-t border-b border-gray-900 hover:bg-gray-900 hover:text-white focus:z-10 focus:ring-2 focus:ring-gray-500 focus:bg-gray-900 focus:text-white dark:border-white dark:text-white dark:hover:text-white dark:hover:bg-gray-700 dark:focus:bg-gray-700">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10" />
        </svg>
        Rename
    </button>
    <button disabled="disabled" type="button" class="inline-flex items-center py-2 px-4 text-sm font-medium text-gray-900 bg-transparent rounded-r-md border border-gray-900 hover:bg-gray-900 hover:text-white focus:z-10 focus:ring-2 focus:ring-gray-500 focus:bg-gray-900 focus:text-white dark:border-white dark:text-white dark:hover:text-white dark:hover:bg-gray-700 dark:focus:bg-gray-700">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />
        </svg>
        Delete
    </button>
</div>
<br/>

<!-- ARTICLE CARDS -->
@if (!_articles.Any())
{
    <a>No articles found...</a>
}
else
{
    @foreach (var article in _articles.OrderByDescending(a => a.PublicationDate))
    {
        <ArticleCard article=@article />
    }
}

<!-- SLIDEOVER FOR EDITING NAME / FOLDER FEEDS -->
<SlideOver>
    <EditForm Model="_folder" OnValidSubmit="UpdateFolder">
        <DataAnnotationsValidator/>
        
    <h5 class="mb-4 font-bold tracking-tight dark:text-white" style="font-size: 2em">Manage your Folder</h5>
    <h5 class="mb-2 font-bold tracking-tight dark:text-white" style="font-size: 1.5em">Name</h5>
    <div class="relative">
        <InputText @bind-Value="_folder.Name" type="text" id="input-group-0" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="e.g. 'Tech News'" />
        <ValidationMessage For="@(() => _folder.Name)" />
    </div>

    <h5 class="mb-2 mt-5 font-bold tracking-tight dark:text-white" style="font-size: 1.5em">@(_folder.Name)'s feeds</h5>
    @if (!_folder.Feeds.Any())
    {
        <div class="bg-gray-100 rounded-lg border border-gray-400 px-5 py-3 mb-3 align-middle">
            <a>No feeds...</a>
        </div>
    }
    @foreach (var feed in _folder.Feeds)
    {
        <div class="bg-gray-100 rounded-lg border border-gray-400 px-5 py-3 mb-3">
            <a>@feed.Name</a>
            <button @onclick="@(() => RemoveFeedFromFolder(feed))" type="button" class="float-right hover:bg-red-600 hover:text-white text-red-600 border border-red-600 hover:bg-red-600 focus:ring-2 focus:outline-none focus:ring-black font-medium rounded text-sm px-3 text-center dark:border-gray-600 dark:text-gray-400 dark:hover:text-white dark:hover:bg-red dark:focus:ring-gray-800">
                <svg style="display:inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="align-middle  w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M18 12H6"/>
                </svg>
                <a class="align-middle" style="display:inline-block">Remove Feed</a>
            </button>
        </div>
    }
    <h5 class="mb-2 mt-5 font-bold tracking-tight dark:text-white" style="font-size: 1.5em">Feeds</h5>
    @if (!_feeds.Any())
    {
        <div class="bg-gray-100 rounded-lg border border-gray-400 px-5 py-3 mb-3 align-middle">
            <a>No feeds to add...</a>
        </div>
    }
    @foreach (var feed in _feeds)
    {
        <div class="bg-gray-100 rounded-lg border border-gray-400 px-5 py-3 mb-3">
            <a>@feed.Name</a>
            <button @onclick="@(() => AddFeedToFolder(feed))" type="button" class="float-right hover:bg-green-600 hover:text-white text-green-600 border border-green-600 hover:bg-green-600 focus:ring-2 focus:outline-none focus:ring-black font-medium rounded text-sm px-3 text-center dark:border-gray-600 dark:text-gray-400 dark:hover:text-white dark:hover:bg-green dark:focus:ring-gray-800">
                <svg style="display:inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="align-middle w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v12m6-6H6"/>
                </svg>
                <a class="align-middle" style="display:inline-block">Add Feed</a>
            </button>
        </div>
    }
    <button type="submit" class="w-32 float-right mb-4 text-gray-900 hover:text-white border border-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:border-gray-600 dark:text-gray-400 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-800">Save</button>
    </EditForm>
</SlideOver>


@code {
    [Parameter]
    public int folderId { get; set; }
    
    // FOR ARTICLE DISPLAY
    private List<Article> _articles = new();
    
    // FOR EDITING THE FOLDERS FEEDS
    private List<Feed> _feeds = new(); 
    private Folder? _folder;
    private string _folderDisplayName = "Folder";
    
    protected override async Task OnInitializedAsync()
    {
        await LoadArticles();
    }
    
    private async Task LoadArticles()
    {
        await LoadFolder((int)folderId);
        _articles = (await _articleRepo.GetFromGroupId((int)folderId)).OrderByDescending(x => x.PublicationDate).ToList();
    }
    
    private async Task LoadFolder(int grpId)
    {
        _folder = await FolderRepo.Get(grpId);
        _folderDisplayName = _folder.Name;
    }    
    
    private async Task LoadFeeds()
    {
        _feeds = (await _feedRepo.GetAll()).Except(_folder.Feeds).ToList();
        await js.InvokeVoidAsync("toggleSlideover");
    }    
    
    private async Task RemoveFeedFromFolder(Feed feed)
    {
        _folder.Feeds.Remove(feed);
        _feeds.Add(feed);
    }    
    
    private async Task AddFeedToFolder(Feed feed)
    {
        _folder.Feeds.Add(feed);
        _feeds.Remove(feed);
    }    
    
    private async Task UpdateFolder()
    {
        await FolderRepo.Update(_folder);
        _folderDisplayName = _folder.Name;
        await LoadArticles();
        await js.InvokeVoidAsync("toggleSlideover");
        
        // force refresh of sidebar; else the name and feeds are not refreshed
        NavigationManager.NavigateTo("/folder/" + folderId);
    }
}