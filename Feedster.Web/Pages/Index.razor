@page "/"

@inject ArticleRepository _articleRepo

<PageTitle>Feedster - Home</PageTitle>
<div>
<svg style="vertical-align: text-bottom; position: relative; top: 2px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="inline-block w-14 h-14 ">
  <path d="M11.47 3.84a.75.75 0 011.06 0l8.69 8.69a.75.75 0 101.06-1.06l-8.689-8.69a2.25 2.25 0 00-3.182 0l-8.69 8.69a.75.75 0 001.061 1.06l8.69-8.69z" />
  <path d="M12 5.432l8.159 8.159c.03.03.06.058.091.086v6.198c0 1.035-.84 1.875-1.875 1.875H15a.75.75 0 01-.75-.75v-4.5a.75.75 0 00-.75-.75h-3a.75.75 0 00-.75.75V21a.75.75 0 01-.75.75H5.625a1.875 1.875 0 01-1.875-1.875v-6.198a2.29 2.29 0 00.091-.086L12 5.43z" />
</svg>

    <h5 class="mb-2 font-bold tracking-tight dark:text-white space-mono" style="font-size: 3.5em; display:inline-block;">Home</h5>
    <a class=" text-gray-300 ml-2" style="display:inline-block">v0.6.0</a>
</div>

<!-- ALL ARTICLE CARDS -->
@if (!_articles.Any())
{
    <a>No articles found...</a>
}
else
{
    @foreach (var article in _articles.OrderByDescending(a => a.PublicationDate))
    {
        <ArticleCard article=@article />
    }
}

<!--Pagination pageNum=@pageNum PageChanged=@PageChanged /-->

@code {
    private List<Article> _articles = new();
    //int pageNum = 1;
    //bool nextButtonDisabled = false;
    //bool prevButtonDisabled = true;
    protected override async Task OnInitializedAsync()
    {
        await LoadArticles(0);
    }
    private async Task LoadArticles(int startIndex)
    {
        _articles = (await _articleRepo.GetAll()).OrderByDescending(x => x.PublicationDate).ToList();
        //int stopIndex = (startIndex + 20 > allArticles.Count ? allArticles.Count - startIndex : 20);
//
        //if (stopIndex <= 0)
        //{
        //    nextButtonDisabled = true;
        //}
        //
        //if(stopIndex )
        //
        //_articles = allArticles.GetRange(startIndex, stopIndex);
    }
    
    //private async Task PageChanged(int newPage)
    //{
    //    if(newPage <= 0){}
    //    
    //    int startIndex = 0;
    //    for (int i = 0; i < newPage; i++)
    //    {
    //        startIndex += 20;
    //    }
    //    await LoadArticles(startIndex);
    //    pageNum = newPage;
    //}
}