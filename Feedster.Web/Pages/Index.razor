@page "/"
@page "/{groupId:int}"
@page "/feed/{feedId:int}"

@inject ArticleRepository _articleRepo
@inject GroupRepository _groupRepo
@inject FeedRepository _feedRepo
@inject IJSRuntime js

<PageTitle>Feedster - Home</PageTitle>
<h5 class="mb-2 font-bold tracking-tight dark:text-white" style="font-size: 3.5em">@(_group is null ? "Home" : _group.Name)</h5>

<!-- Feed controls  -->
@if (groupId is not null)
{
    <div class="inline-flex rounded-md shadow-sm mb-4" role="group">
        <button @onmousedown="LoadFeeds" onclick="toggleSlideover()" type="button" class="inline-flex items-center py-2 px-4 text-sm font-medium text-gray-900 bg-transparent rounded-l-lg border border-gray-900 hover:bg-gray-900 hover:text-white focus:z-10 focus:ring-2 focus:ring-gray-500 focus:bg-gray-900 focus:text-white dark:border-white dark:text-white dark:hover:text-white dark:hover:bg-gray-700 dark:focus:bg-gray-700">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12.75 19.5v-.75a7.5 7.5 0 00-7.5-7.5H4.5m0-6.75h.75c7.87 0 14.25 6.38 14.25 14.25v.75M6 18.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0z" />
            </svg>
            Manage Feeds
        </button>
        <button type="button" onclick="toggleSlideover()" class="inline-flex items-center py-2 px-4 text-sm font-medium text-gray-900 bg-transparent border-t border-b border-gray-900 hover:bg-gray-900 hover:text-white focus:z-10 focus:ring-2 focus:ring-gray-500 focus:bg-gray-900 focus:text-white dark:border-white dark:text-white dark:hover:text-white dark:hover:bg-gray-700 dark:focus:bg-gray-700">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10" />
            </svg>
            Rename
        </button>
        <button type="button" class="inline-flex items-center py-2 px-4 text-sm font-medium text-gray-900 bg-transparent rounded-r-md border border-gray-900 hover:bg-gray-900 hover:text-white focus:z-10 focus:ring-2 focus:ring-gray-500 focus:bg-gray-900 focus:text-white dark:border-white dark:text-white dark:hover:text-white dark:hover:bg-gray-700 dark:focus:bg-gray-700">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />
            </svg>
            Delete
        </button>
    </div>
    <br/>
    
    <!-- Slideover for managing group feeds -->
    <div class=" flex items-center justify-center" style="width: 50em">
      <div id="slideover-container" class="w-full h-full fixed inset-0 invisible" >
        <div onclick="toggleSlideover()" id="slideover-bg" class="w-full h-full duration-500 ease-out transition-all inset-0 absolute bg-gray-900 opacity-0"></div>
        <div id="slideover" class="w-[50rem] bg-white h-full absolute right-0 duration-300 ease-out transition-all translate-x-full">
            <div class="absolute cursor-pointer text-gray-600 top-0 w-8 h-8 flex items-center justify-center right-0 mt-5 mr-5" onclick="toggleSlideover()">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
            </div>
            <div class="p-10">
                <h5 class="mb-4 font-bold tracking-tight dark:text-white" style="font-size: 2em">Manage your Folder</h5>
                <h5 class="mb-2 font-bold tracking-tight dark:text-white" style="font-size: 1.5em">Name</h5>
                <div class="relative">
                    <input @bind-value="_group.Name" type="text" id="input-group-0" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="e.g. 'Tech News'">
                </div>
                
                <h5 class="mb-2 mt-5 font-bold tracking-tight dark:text-white" style="font-size: 1.5em">@(_group.Name)'s feeds</h5>
                @if (!_group.Feeds.Any())
                {                    
                    <div class="bg-gray-100 rounded-lg border border-gray-400 px-5 py-3 mb-3 align-middle">
                         <a>No feeds...</a>
                     </div>
                }
                @foreach (var feed in _group.Feeds)
                {
                    <div class="bg-gray-100 rounded-lg border border-gray-400 px-5 py-3 mb-3">
                        <a>@feed.Name</a>
                        <button @onclick="@(() => RemoveFeedFromGroup(feed))" type="button" class="float-right hover:bg-red-600 hover:text-white text-red-600 border border-red-600 hover:bg-red-600 focus:ring-2 focus:outline-none focus:ring-black font-medium rounded text-sm px-3 text-center dark:border-gray-600 dark:text-gray-400 dark:hover:text-white dark:hover:bg-red dark:focus:ring-gray-800">
                            <svg style="display:inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="align-middle  w-6 h-6">
                              <path stroke-linecap="round" stroke-linejoin="round" d="M18 12H6" />
                            </svg>
                            <a class="align-middle" style="display:inline-block">Remove Feed</a>
                        </button>
                    </div>
                }
                <h5 class="mb-2 mt-5 font-bold tracking-tight dark:text-white" style="font-size: 1.5em">Feeds</h5>
                @if (!_feeds.Any())
                {                    
                    <div class="bg-gray-100 rounded-lg border border-gray-400 px-5 py-3 mb-3 align-middle">
                         <a>No feeds to add...</a>
                     </div>
                }
                @foreach (var feed in _feeds)
                {
                    <div class="bg-gray-100 rounded-lg border border-gray-400 px-5 py-3 mb-3">
                        <a>@feed.Name</a>
                        <button @onclick="@(() => AddFeedToGroup(feed))" type="button" class="float-right hover:bg-green-600 hover:text-white text-green-600 border border-green-600 hover:bg-green-600 focus:ring-2 focus:outline-none focus:ring-black font-medium rounded text-sm px-3 text-center dark:border-gray-600 dark:text-gray-400 dark:hover:text-white dark:hover:bg-green dark:focus:ring-gray-800">
                            <svg style="display:inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="align-middle w-6 h-6">
                              <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v12m6-6H6" />
                            </svg>
                            <a class="align-middle" style="display:inline-block">Add Feed</a>
                        </button>
                    </div>
                }
                <button @onclick="UpdateGroup" type="button" class="w-32 float-right mb-4 text-gray-900 hover:text-white border border-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:border-gray-600 dark:text-gray-400 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-800">Save</button>
            </div>
        </div>
      </div>
    </div>
    
}

@if (!_articles.Any())
{
    <a>No articles found...</a>
}
else
{
    <div>
        @foreach (var article in _articles.OrderByDescending(a => a.PublicationDate))
        {
            <div class="mb-4">
                <a href="@article.ArticleLink" target="_blank" style="min-width: 20em;" class="transition hover:bg-gray-200 block p-6 bg-gray-100 max-w-screen-sm rounded-lg border border-gray-400 shadow-xl hover:bg-gray-200 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
                    @if (File.Exists("images/" + article.ImagePath))
                    {
                        <img src="@("/images/" + article.ImagePath)" class="rounded max-w-50 mb-2" alt="article image">
                    }
                    <p class="text-sm top-0 mb-2">@article.Feed.Name • @Convert.ToDateTime(article.PublicationDate).ToString("g")</p>
                    <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">@article.Title</h5>
                    @if (article.Description is not null)
                    {
                        <p class="mb-2 font-normal text-gray-700 dark:text-gray-400">@article.Description</p>
                    }
                    @if(article.Tags.Count() != 0)
                    {
                        foreach (var cat in article.Tags.Distinct())
                        {
                            <a class="p-2 text-sm text-gray-500 rounded bg-gray-200 mr-1">#@cat</a>
                        }
                    }
                </a>
            </div>
        }
    </div>
}

@code {
    [Parameter]
    public int? groupId { get; set; }
    
    [Parameter]
    public int? feedId { get; set; }
    
    private List<Article> _articles = new();
    private List<Feed> _feeds = new(); 
    private Group? _group;
    private Feed? _feed;

    protected override async Task OnInitializedAsync()
    {
        await LoadArticles();
    }

    private async Task LoadArticles()
    {
        switch ((groupId, feedId))
        {
            case (null, null):
                // Home page
                _articles = (await _articleRepo.GetAll()).OrderByDescending(x => x.PublicationDate).ToList();
                break;
            case (not null, null) :
                // Group is displayed
                await LoadGroup((int)groupId);
                _articles = (await _articleRepo.GetFromGroupId((int)groupId)).OrderByDescending(x => x.PublicationDate).ToList();
                break;
            case (null, not null):
                // specific feed is displayed
                _feed = await _feedRepo.Get((int) feedId);
                _articles = _feed.Articles.OrderByDescending(x => x.PublicationDate).ToList();
                break;
        }
    }

    private async Task LoadGroup(int grpId)
    {
        _group = await _groupRepo.Get(grpId);
    }    
    
    private async Task LoadFeeds()
    {
        _feeds = (await _feedRepo.GetAll()).Except(_group.Feeds).ToList();
    }    
    
    private async Task RemoveFeedFromGroup(Feed feed)
    {
        _group.Feeds.Remove(feed);
        _feeds.Add(feed);
    }    
    
    private async Task AddFeedToGroup(Feed feed)
    {
        _group.Feeds.Add(feed);
        _feeds.Remove(feed);
    }    
    
    private async Task UpdateGroup()
    {
        await _groupRepo.Update(_group);
        await LoadArticles();
        await js.InvokeVoidAsync("toggleSlideover");
    }
}